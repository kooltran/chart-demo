{"ast":null,"code":"var _jsxFileName = \"/Users/it/Documents/Project/chart-demo/src/components/WeatherChart/WeatherChart.jsx\";\nimport React, { useEffect, useState, useLayoutEffect } from \"react\"; // import Chart from \"chart.js\";\n\nconst NUMB_DAYS = 10; // var data = {\n//   labels: [\"1\", \"2\"],\n//   datasets: [\n//     {\n//       label: \"My Second dataset\",\n//       fillColor: \"rgba(151,187,205,0.2)\",\n//       strokeColor: \"rgba(151,187,205,1)\",\n//       pointColor: \"rgba(151,187,205,1)\",\n//       pointStrokeColor: \"#fff\",\n//       pointHighlightFill: \"#fff\",\n//       pointHighlightStroke: \"rgba(151,187,205,1)\",\n//       data: [2.5, 0.5],\n//     },\n//   ],\n// };\n\nconst tideData = [{\n  waterLevel: {\n    start: 2,\n    end: 0.5\n  },\n  time: {\n    start: 7,\n    end: 15\n  }\n}, {\n  waterLevel: {\n    start: 0.5,\n    end: 2.5\n  },\n  time: {\n    start: 15,\n    end: 15 + 10\n  }\n}, {\n  waterLevel: {\n    start: 2.5,\n    end: 1\n  },\n  time: {\n    start: 15 + 10,\n    end: 15 + 10 + 7\n  }\n}, {\n  waterLevel: {\n    start: 1,\n    end: 2.3\n  },\n  time: {\n    start: 15 + 10 + 7,\n    end: 15 + 10 + 7 + 6\n  }\n}, {\n  waterLevel: {\n    start: 2.3,\n    end: 1.5\n  },\n  time: {\n    start: 15 + 10 + 7 + 6,\n    end: 15 + 10 + 7 + 6 + 5\n  }\n}, {\n  waterLevel: {\n    start: 1.5,\n    end: 2.5\n  },\n  time: {\n    start: 15 + 10 + 7 + 6 + 5,\n    end: 15 + 10 + 7 + 6 + 5 + 9\n  }\n}];\nconst sampleData = [{\n  waterLevel: {\n    startLv: 2,\n    endLv: 0.5\n  },\n  time: {\n    startT: 7,\n    endT: 15\n  }\n}];\n\nconst WeatherChart = () => {\n  const {\n    innerWidth\n  } = window;\n  const chartRef = React.createRef();\n  const chartContainerRef = React.createRef();\n  const chartWrapperRef = React.createRef();\n  const [chartWidth, setChartWidth] = useState(innerWidth);\n  const halfInnerWidth = chartWidth / 2;\n  const pxEachHr = chartWidth / 12;\n\n  const generateData = (data, nextWaterLv, nextTime) => {\n    for (let i = 0; i < 5; i++) {\n      return data.map(item => {\n        const waterLevel = item.waterLevel;\n        const time = item.time;\n        return { ...item,\n          ...waterLevel,\n          startLv: waterLevel.start,\n          endLv: nextWaterLv,\n          ...time,\n          startT: time.start,\n          endT: time.start + nextTime\n        };\n      });\n    }\n  };\n\n  const convertDataToXY = (beginPt, waterLevel, time) => {\n    return {\n      x: (time - 7) * pxEachHr,\n      y: beginPt - waterLevel * 100\n    };\n  };\n\n  const drawSunChart = (beginPt, ctx) => {\n    ctx.beginPath();\n    ctx.lineWidth = 2;\n    ctx.strokeStyle = \"#ff8514\";\n\n    for (let i = 0; i < NUMB_DAYS; i++) {\n      ctx.moveTo(i * chartWidth, beginPt);\n\n      if (i % 2) {\n        ctx.quadraticCurveTo(chartWidth * i + halfInnerWidth, beginPt * 2, chartWidth * (i + 1), beginPt);\n      } else {\n        ctx.quadraticCurveTo(chartWidth * i + halfInnerWidth, -beginPt + 150, chartWidth * (i + 1), beginPt);\n      }\n    }\n\n    ctx.stroke();\n  };\n\n  const drawTideChart = (beginPt, ctx) => {\n    ctx.beginPath();\n    ctx.strokeStyle = \"#94d6f7\";\n    ctx.fillStyle = \"blue\";\n    ctx.fill();\n\n    for (let i = 0; i < tideData.length; i++) {\n      const startPt = convertDataToXY(beginPt, tideData[i].waterLevel.start, tideData[i].time.start);\n      const endPt = convertDataToXY(beginPt, tideData[i].waterLevel.end, tideData[i].time.end);\n      const middlePtY = (beginPt - startPt.y - (beginPt - endPt.y)) / 2 + startPt.y;\n      const middlePtX = (endPt.x - startPt.x) / 2 + startPt.x;\n\n      if (!i % 2) {\n        ctx.moveTo(startPt.x, startPt.y);\n        ctx.quadraticCurveTo(middlePtX, startPt.y, middlePtX, middlePtY);\n        ctx.moveTo(middlePtX, middlePtY);\n        ctx.quadraticCurveTo(middlePtX, endPt.y, endPt.x, endPt.y);\n      } else {\n        ctx.moveTo(startPt.x, startPt.y);\n        ctx.quadraticCurveTo(middlePtX, startPt.y, middlePtX, middlePtY);\n        ctx.moveTo(middlePtX, middlePtY);\n        ctx.quadraticCurveTo(middlePtX, endPt.y, endPt.x, endPt.y);\n      }\n    }\n\n    ctx.stroke();\n  };\n\n  const handleCanvas = () => {\n    const chartContainerHeight = chartContainerRef.current.offsetHeight;\n    const beginPt = chartContainerHeight;\n    const c = chartRef.current;\n    const ctx = c.getContext(\"2d\");\n    c.width = NUMB_DAYS * chartWidth;\n    c.height = beginPt * 2;\n    drawSunChart(beginPt, ctx);\n    drawTideChart(beginPt, ctx);\n  }; // const handleChart = () => {\n  //   const ctx = chartRef.current.getContext(\"2d\");\n  //   new Chart(ctx, {\n  //     type: \"line\",\n  //     responsive: true,\n  //     data: data,\n  //   });\n  // };\n\n\n  useLayoutEffect(() => {\n    const updateChartWidth = e => {\n      const resizedChartWidth = e && e.currentTarget.innerWidth;\n\n      if (resizedChartWidth) {\n        setChartWidth(resizedChartWidth);\n      }\n    };\n\n    updateChartWidth();\n    window.addEventListener(\"resize\", updateChartWidth);\n    return () => {\n      window.removeEventListener(\"resize\", updateChartWidth);\n    };\n  }, [chartWidth]);\n  useEffect(() => {\n    // const chartContainerHeight = chartContainerRef.current.offsetHeight;\n    // console.log(chartContainerHeight, \"chartContainerHeight\");\n    handleCanvas(); // chartWrapperRef.current.style.width = `${chartWidth}px`;\n    // chartContainerRef.current.style.width = `1200px`;\n    // handleChart(chartRef);\n  }, [chartWidth]);\n  return (\n    /*#__PURE__*/\n    // <div className=\"chart-wrapper\" ref={chartWrapperRef}>\n    React.createElement(\"div\", {\n      className: \"chart-container\",\n      ref: chartContainerRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chart-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"blue-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }\n    }, \"Tide\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"orange-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }\n    }, \"Sunrise & Sunset\")), /*#__PURE__*/React.createElement(\"canvas\", {\n      className: \"chart-canvas\",\n      ref: chartRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 7\n      }\n    })) // </div>\n\n  );\n};\n\nexport default WeatherChart;","map":{"version":3,"sources":["/Users/it/Documents/Project/chart-demo/src/components/WeatherChart/WeatherChart.jsx"],"names":["React","useEffect","useState","useLayoutEffect","NUMB_DAYS","tideData","waterLevel","start","end","time","sampleData","startLv","endLv","startT","endT","WeatherChart","innerWidth","window","chartRef","createRef","chartContainerRef","chartWrapperRef","chartWidth","setChartWidth","halfInnerWidth","pxEachHr","generateData","data","nextWaterLv","nextTime","i","map","item","convertDataToXY","beginPt","x","y","drawSunChart","ctx","beginPath","lineWidth","strokeStyle","moveTo","quadraticCurveTo","stroke","drawTideChart","fillStyle","fill","length","startPt","endPt","middlePtY","middlePtX","handleCanvas","chartContainerHeight","current","offsetHeight","c","getContext","width","height","updateChartWidth","e","resizedChartWidth","currentTarget","addEventListener","removeEventListener"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useLayoutEffect } from \"react\";\n// import Chart from \"chart.js\";\n\nconst NUMB_DAYS = 10;\n\n// var data = {\n//   labels: [\"1\", \"2\"],\n//   datasets: [\n//     {\n//       label: \"My Second dataset\",\n//       fillColor: \"rgba(151,187,205,0.2)\",\n//       strokeColor: \"rgba(151,187,205,1)\",\n//       pointColor: \"rgba(151,187,205,1)\",\n//       pointStrokeColor: \"#fff\",\n//       pointHighlightFill: \"#fff\",\n//       pointHighlightStroke: \"rgba(151,187,205,1)\",\n//       data: [2.5, 0.5],\n//     },\n//   ],\n// };\n\nconst tideData = [\n  {\n    waterLevel: {\n      start: 2,\n      end: 0.5,\n    },\n    time: {\n      start: 7,\n      end: 15,\n    },\n  },\n  {\n    waterLevel: {\n      start: 0.5,\n      end: 2.5,\n    },\n    time: {\n      start: 15,\n      end: 15 + 10,\n    },\n  },\n  {\n    waterLevel: {\n      start: 2.5,\n      end: 1,\n    },\n    time: {\n      start: 15 + 10,\n      end: 15 + 10 + 7,\n    },\n  },\n  {\n    waterLevel: {\n      start: 1,\n      end: 2.3,\n    },\n    time: {\n      start: 15 + 10 + 7,\n      end: 15 + 10 + 7 + 6,\n    },\n  },\n  {\n    waterLevel: {\n      start: 2.3,\n      end: 1.5,\n    },\n    time: {\n      start: 15 + 10 + 7 + 6,\n      end: 15 + 10 + 7 + 6 + 5,\n    },\n  },\n  {\n    waterLevel: {\n      start: 1.5,\n      end: 2.5,\n    },\n    time: {\n      start: 15 + 10 + 7 + 6 + 5,\n      end: 15 + 10 + 7 + 6 + 5 + 9,\n    },\n  },\n];\n\nconst sampleData = [\n  {\n    waterLevel: {\n      startLv: 2,\n      endLv: 0.5,\n    },\n    time: {\n      startT: 7,\n      endT: 15,\n    },\n  },\n];\n\nconst WeatherChart = () => {\n  const { innerWidth } = window;\n  const chartRef = React.createRef();\n  const chartContainerRef = React.createRef();\n  const chartWrapperRef = React.createRef();\n  const [chartWidth, setChartWidth] = useState(innerWidth);\n  const halfInnerWidth = chartWidth / 2;\n  const pxEachHr = chartWidth / 12;\n\n  const generateData = (data, nextWaterLv, nextTime) => {\n    for (let i = 0; i < 5; i++) {\n      return data.map((item) => {\n        const waterLevel = item.waterLevel;\n        const time = item.time;\n        return {\n          ...item,\n          ...waterLevel,\n          startLv: waterLevel.start,\n          endLv: nextWaterLv,\n          ...time,\n          startT: time.start,\n          endT: time.start + nextTime,\n        };\n      });\n    }\n  };\n\n  const convertDataToXY = (beginPt, waterLevel, time) => {\n    return {\n      x: (time - 7) * pxEachHr,\n      y: beginPt - waterLevel * 100,\n    };\n  };\n\n  const drawSunChart = (beginPt, ctx) => {\n    ctx.beginPath();\n    ctx.lineWidth = 2;\n    ctx.strokeStyle = \"#ff8514\";\n\n    for (let i = 0; i < NUMB_DAYS; i++) {\n      ctx.moveTo(i * chartWidth, beginPt);\n      if (i % 2) {\n        ctx.quadraticCurveTo(\n          chartWidth * i + halfInnerWidth,\n          beginPt * 2,\n          chartWidth * (i + 1),\n          beginPt\n        );\n      } else {\n        ctx.quadraticCurveTo(\n          chartWidth * i + halfInnerWidth,\n          -beginPt + 150,\n          chartWidth * (i + 1),\n          beginPt\n        );\n      }\n    }\n\n    ctx.stroke();\n  };\n\n  const drawTideChart = (beginPt, ctx) => {\n    ctx.beginPath();\n    ctx.strokeStyle = \"#94d6f7\";\n    ctx.fillStyle = \"blue\";\n    ctx.fill();\n\n    for (let i = 0; i < tideData.length; i++) {\n      const startPt = convertDataToXY(\n        beginPt,\n        tideData[i].waterLevel.start,\n        tideData[i].time.start\n      );\n      const endPt = convertDataToXY(\n        beginPt,\n        tideData[i].waterLevel.end,\n        tideData[i].time.end\n      );\n\n      const middlePtY =\n        (beginPt - startPt.y - (beginPt - endPt.y)) / 2 + startPt.y;\n\n      const middlePtX = (endPt.x - startPt.x) / 2 + startPt.x;\n\n      if (!i % 2) {\n        ctx.moveTo(startPt.x, startPt.y);\n        ctx.quadraticCurveTo(middlePtX, startPt.y, middlePtX, middlePtY);\n\n        ctx.moveTo(middlePtX, middlePtY);\n        ctx.quadraticCurveTo(middlePtX, endPt.y, endPt.x, endPt.y);\n      } else {\n        ctx.moveTo(startPt.x, startPt.y);\n        ctx.quadraticCurveTo(middlePtX, startPt.y, middlePtX, middlePtY);\n\n        ctx.moveTo(middlePtX, middlePtY);\n        ctx.quadraticCurveTo(middlePtX, endPt.y, endPt.x, endPt.y);\n      }\n    }\n\n    ctx.stroke();\n  };\n\n  const handleCanvas = () => {\n    const chartContainerHeight = chartContainerRef.current.offsetHeight;\n    const beginPt = chartContainerHeight;\n    const c = chartRef.current;\n    const ctx = c.getContext(\"2d\");\n\n    c.width = NUMB_DAYS * chartWidth;\n    c.height = beginPt * 2;\n\n    drawSunChart(beginPt, ctx);\n\n    drawTideChart(beginPt, ctx);\n  };\n\n  // const handleChart = () => {\n  //   const ctx = chartRef.current.getContext(\"2d\");\n\n  //   new Chart(ctx, {\n  //     type: \"line\",\n  //     responsive: true,\n  //     data: data,\n  //   });\n  // };\n\n  useLayoutEffect(() => {\n    const updateChartWidth = (e) => {\n      const resizedChartWidth = e && e.currentTarget.innerWidth;\n      if (resizedChartWidth) {\n        setChartWidth(resizedChartWidth);\n      }\n    };\n    updateChartWidth();\n    window.addEventListener(\"resize\", updateChartWidth);\n    return () => {\n      window.removeEventListener(\"resize\", updateChartWidth);\n    };\n  }, [chartWidth]);\n\n  useEffect(() => {\n    // const chartContainerHeight = chartContainerRef.current.offsetHeight;\n    // console.log(chartContainerHeight, \"chartContainerHeight\");\n    handleCanvas();\n    // chartWrapperRef.current.style.width = `${chartWidth}px`;\n    // chartContainerRef.current.style.width = `1200px`;\n    // handleChart(chartRef);\n  }, [chartWidth]);\n\n  return (\n    // <div className=\"chart-wrapper\" ref={chartWrapperRef}>\n    <div className=\"chart-container\" ref={chartContainerRef}>\n      <div className=\"chart-title\">\n        <span className=\"blue-title\">Tide</span>\n        <span className=\"orange-title\">Sunrise & Sunset</span>\n      </div>\n      <canvas className=\"chart-canvas\" ref={chartRef} />\n    </div>\n    // </div>\n  );\n};\n\nexport default WeatherChart;\n"]},"metadata":{},"sourceType":"module"}