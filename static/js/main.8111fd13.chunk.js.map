{"version":3,"sources":["assets/img/icons/sun.svg","components/Nav/index.js","components/Nav/Nav.jsx","components/WeatherStatus/index.js","components/WeatherStatus/WeatherStatus.jsx","components/WeatherParams/index.js","components/WeatherParams/WeatherParams.jsx","helpers.js","components/WeatherChart/index.js","components/WeatherChart/WeatherChart.jsx","components/WeatherChart/useWindowResize.js","components/Layout/index.js","components/Layout/Layout.jsx","App.jsx","index.js"],"names":["module","exports","Nav","className","WeatherStatus","WeatherParams","sampleDateWater","waterLevel","start","end","formatTime","time","fmTime","decimal","hr","Math","floor","min","sampleDataTimeItem","n","getQBezierValue","t","p1","p2","p3","iT","convertDataToXY","chartHeight","pxEachHr","x","y","sampleDataTime","res","i","push","generateTime","length","tideData","map","item","WeatherChart","chartRef","React","createRef","chartContainerRef","sunRef","chartWidth","innerWidth","window","useState","setChartWidth","useLayoutEffect","updateChartWidth","e","resizedChartWidth","currentTarget","addEventListener","removeEventListener","useWindowResize","scrollNumb","setScroll","tmpPos","setPos","period","setPeriod","days","setDay","canvasWidth","halfChartWidth","timeFromPx","px","convertPxToTime","timeScroll","mode","getTimeMode","_fillChartBg","ctx","lineTo","fillStyle","strokeStyle","fill","_fillText","dataText","font","textAlign","fillText","fillRect","drawTimeChart","useCallback","beginPath","lineWidth","moveTo","quadraticCurveTo","stroke","drawTideChart","startPt","endPt","middlePtXFirst","middlePtYFirst","middlePt","drawSun","startY","cpY","endY","position","ps","drawImage","current","handleCanvas","offsetHeight","c","getContext","width","height","useEffect","ref","onScroll","target","scrollLeft","src","sun","alt","Layout","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8111fd13.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sun.da20b792.svg\";","import Nav from \"./Nav\";\n\nexport default Nav;\n","import React from \"react\";\n\nconst Nav = () => {\n  return (\n    <div className=\"nav-container\">\n      <div className=\"nav-burger\">\n        <span></span>\n        <span></span>\n        <span></span>\n      </div>\n      <div className=\"nav-location\">\n        <div className=\"nav-location-name\">myENV</div>\n        <div className=\"nav-location-dropdown\">\n          <span>Current Location</span>\n          <span className=\"icon-arrow\"></span>\n        </div>\n      </div>\n      <div className=\"nav-notification\"></div>\n    </div>\n  );\n};\n\nexport default Nav;\n","import WeatherStatus from \"./WeatherStatus\";\n\nexport default WeatherStatus;\n","import React from \"react\";\n\nconst WeatherStatus = () => {\n  return (\n    <div className=\"weatherStatus-wrapper\">\n      <div className=\"weatherStatus-container\">\n        <div className=\"weatherStatus-icon\"></div>\n        <div className=\"weatherStatus-info\">\n          <div className=\"status-text\">Cloudy</div>\n          <div className=\"status-info\">\n            <span className=\"status-temperature\">29.9 C</span>\n            <span className=\"status-humidity\">73%</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WeatherStatus;\n","import WeatherParams from \"./WeatherParams\";\n\nexport default WeatherParams;\n","import React from \"react\";\n\nconst WeatherParams = () => {\n  return (\n    <div className=\"weatherParams-wrapper\">\n      <div className=\"weatherParams-item\">\n        <div className=\"title\">PSI</div>\n        <div className=\"content bg-numb\">23</div>\n        <div className=\"extra\">Good</div>\n      </div>\n      <div className=\"weatherParams-item\">\n        <div className=\"title\">RAIN</div>\n        <div className=\"content normal-numb\">0</div>\n        <div className=\"extra\">mm</div>\n      </div>\n      <div className=\"weatherParams-item\">\n        <div className=\"title\">DENGUE</div>\n        <div className=\"content circle-shape\"></div>\n        <div className=\"extra\"></div>\n      </div>\n      <div className=\"weatherParams-item\">\n        <div className=\"add-icon\"></div>\n        <div className=\"add-text\">Add</div>\n      </div>\n    </div>\n  );\n};\n\nexport default WeatherParams;\n","export const sampleDateWater = [\n  {\n    waterLevel: {\n      start: 0.2,\n      end: 2,\n    },\n  },\n  {\n    waterLevel: {\n      start: 2,\n      end: 0.3,\n    },\n  },\n  {\n    waterLevel: {\n      start: 0.3,\n      end: 2,\n    },\n  },\n  {\n    waterLevel: {\n      start: 2,\n      end: 0.3,\n    },\n  },\n  {\n    waterLevel: {\n      start: 0.3,\n      end: 2,\n    },\n  },\n  {\n    waterLevel: {\n      start: 2,\n      end: 0.3,\n    },\n  },\n  {\n    waterLevel: {\n      start: 0.3,\n      end: 2,\n    },\n  },\n  {\n    waterLevel: {\n      start: 2,\n      end: 0.3,\n    },\n  },\n  {\n    waterLevel: {\n      start: 0.3,\n      end: 2,\n    },\n  },\n  {\n    waterLevel: {\n      start: 2,\n      end: 0.3,\n    },\n  },\n  {\n    waterLevel: {\n      start: 0.3,\n      end: 2,\n    },\n  },\n  {\n    waterLevel: {\n      start: 2,\n      end: 0.5,\n    },\n  },\n];\n\nexport const formatTime = (time) => {\n  const fmTime = time % 24;\n  const decimal = fmTime % 1;\n  const hr = Math.floor(fmTime);\n  const min = Math.floor(60 * decimal);\n  if (hr > 12) {\n    return `${hr - 12}:${min > 10 ? \"\" : \"0\"}${min} pm`;\n  } else if (hr === 0) {\n    return `${12}:${min > 10 ? \"\" : \"0\"}${min} pm`;\n  }\n  return `${hr}:${min > 10 ? \"\" : \"0\"}${min} am`;\n};\n\nexport const getTimeMode = (time) => {\n  const fmTime = time % 24;\n  const hr = Math.floor(fmTime);\n  if (hr >= 19 || hr < 6) {\n    return { mode: \"moon\" };\n  } else {\n    return { mode: \"sun\" };\n  }\n};\n\nexport const generateTime = (n) => {\n  let res = [];\n  for (let i = 0; i < n; i++) {\n    res.push(sampleDataTimeItem(i));\n  }\n  return res;\n};\n\nexport const sampleDataTimeItem = (n) => {\n  const TIDE_PERIOD = 6;\n  return {\n    time: {\n      start: n * TIDE_PERIOD,\n      end: (n + 1) * TIDE_PERIOD,\n    },\n  };\n};\n\nexport const getQBezierValue = (t, p1, p2, p3) => {\n  var iT = 1 - t;\n  return iT * iT * p1 + 2 * iT * t * p2 + t * t * p3;\n};\n\nexport const getQuadraticCurvePoint = (\n  startX,\n  startY,\n  cpX,\n  cpY,\n  endX,\n  endY,\n  position\n) => {\n  return {\n    x: getQBezierValue(position, startX, cpX, endX),\n    y: getQBezierValue(position, startY, cpY, endY),\n  };\n};\n\nexport const convertDataToXY = (chartHeight, waterLevel, time, pxEachHr) => {\n  return {\n    x: time * pxEachHr,\n    y: chartHeight - waterLevel * 100,\n  };\n};\n\nexport const convertPxToTime = (px, chartWidth) => {\n  return (px / chartWidth) * 12 + 6;\n};\n\nconst sampleDataTime = generateTime(sampleDateWater.length);\n\nexport const tideData = sampleDateWater.map((item, i) => ({\n  ...item,\n  ...sampleDataTime[i],\n}));\n","import WeatherChart from \"./WeatherChart\";\n\nexport default WeatherChart;\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport {\n  formatTime,\n  tideData,\n  convertPxToTime,\n  getTimeMode,\n  getQuadraticCurvePoint,\n  convertDataToXY,\n} from \"../../helpers\";\nimport { useWindowResize } from \"./useWindowResize\";\nimport sun from \"../../assets/img/icons/sun.svg\";\n\nconst WeatherChart = () => {\n  const chartRef = React.createRef();\n  const chartContainerRef = React.createRef();\n  const sunRef = React.createRef();\n  const chartWidth = useWindowResize();\n  const [scrollNumb, setScroll] = useState(0);\n  const [tmpPos, setPos] = useState(0.0);\n  const [period, setPeriod] = useState(0);\n  const [days, setDay] = useState(0);\n  const canvasWidth = (tideData.length / 2) * chartWidth;\n  const halfChartWidth = chartWidth / 2;\n  const pxEachHr = chartWidth / 12;\n  const timeFromPx = convertPxToTime(scrollNumb, chartWidth);\n  const timeScroll = formatTime(timeFromPx);\n  const mode = getTimeMode(timeFromPx).mode;\n\n  const _fillChartBg = ({ start, end, chartHeight, ctx }) => {\n    ctx.lineTo(end.x, chartHeight);\n    ctx.lineTo(start.x, chartHeight);\n\n    ctx.fillStyle = \"#c1e5f7\";\n    ctx.strokeStyle = \"#c1e5f7\";\n    ctx.fill();\n  };\n\n  const _fillText = (start, ctx, dataText) => {\n    ctx.font = \"14px Comic Sans MS\";\n    ctx.textAlign = \"center\";\n    ctx.fillStyle = \"#333\";\n    ctx.fillText(`${dataText.waterLevel} m`, start.x, start.y / 2 + 20 + 18);\n    ctx.fillText(formatTime(dataText.time), start.x, start.y / 2 + 20 + 35);\n\n    ctx.fillStyle = \"rgba(0, 0, 0, 0.1)\";\n    ctx.fillRect(start.x - 28, start.y / 2 + 20, 60, 44);\n  };\n\n  //draw time chart\n  const drawTimeChart = useCallback(\n    (ctx, chartHeight) => {\n      ctx.beginPath();\n      ctx.lineWidth = 2;\n      ctx.strokeStyle = \"#ff8514\";\n\n      for (let i = 0; i < tideData.length; i++) {\n        ctx.fillStyle = \"rgba(0, 0, 0, 0.2)\";\n        if (i === 0) {\n          ctx.fillRect(0, 0, halfChartWidth, chartHeight);\n        }\n\n        ctx.moveTo(i * chartWidth + halfChartWidth, chartHeight);\n        if (!(i % 2)) {\n          ctx.quadraticCurveTo(\n            chartWidth * (i + 1),\n            -chartHeight + 150,\n            chartWidth * (i + 1) + halfChartWidth,\n            chartHeight\n          );\n        } else {\n          // fill color for night times\n          ctx.fillRect(\n            halfChartWidth + chartWidth * i,\n            0,\n            chartWidth,\n            chartHeight\n          );\n        }\n      }\n\n      ctx.stroke();\n    },\n    [chartWidth, halfChartWidth]\n  );\n\n  //draw tide chart\n  const drawTideChart = useCallback(\n    (ctx, chartHeight) => {\n      ctx.beginPath();\n      ctx.strokeStyle = \"#94d6f7\";\n\n      const startPt = (i) => {\n        return convertDataToXY(\n          chartHeight,\n          tideData[i].waterLevel.start,\n          tideData[i].time.start,\n          pxEachHr\n        );\n      };\n\n      const endPt = (i) => {\n        return convertDataToXY(\n          chartHeight,\n          tideData[i].waterLevel.end,\n          tideData[i].time.end,\n          pxEachHr\n        );\n      };\n\n      const middlePtXFirst = (i) =>\n        (endPt(i).x - startPt(i).x) / 2 + startPt(i).x;\n\n      const middlePtYFirst = (i) =>\n        (chartHeight - startPt(i).y - (chartHeight - endPt(i).y)) / 2 +\n        startPt(i).y;\n      const middlePt = (i) => ({\n        x: middlePtXFirst(i),\n        y: middlePtYFirst(i),\n      });\n\n      for (let i = 0; i < tideData.length; i++) {\n        _fillText(startPt(i), ctx, {\n          waterLevel: tideData[i].waterLevel.start,\n          time: tideData[i].time.start,\n        });\n\n        if (i === 0) {\n          ctx.moveTo(-middlePt(i).x, middlePt(i).y);\n          ctx.quadraticCurveTo(\n            startPt(i).x,\n            startPt(i).y,\n            middlePt(i).x,\n            middlePt(i).y\n          );\n          // fill background color for tide chart\n          _fillChartBg({ start: startPt(i), end: endPt(i), chartHeight, ctx });\n        }\n\n        if (i <= tideData.length - 2) {\n          ctx.moveTo(middlePt(i).x, middlePt(i).y);\n          ctx.quadraticCurveTo(\n            startPt(i + 1).x,\n            startPt(i + 1).y,\n            middlePt(i + 1).x,\n            middlePt(i + 1).y\n          );\n\n          // fill background color for tide chart\n          _fillChartBg({\n            start: middlePt(i),\n            end: middlePt(i + 1),\n            chartHeight,\n            ctx,\n          });\n        }\n\n        if (i === tideData.length - 1) {\n          // fill info of tide chart\n          _fillText(endPt(i), ctx, {\n            waterLevel: tideData[i].waterLevel.end,\n            time: tideData[i].time.end,\n          });\n\n          ctx.moveTo(middlePt(i).x, middlePt(i).y);\n          ctx.quadraticCurveTo(\n            endPt(i).x,\n            endPt(i).y,\n            endPt(i).x + (endPt(i).x - startPt(i).x),\n            startPt(i).y\n          );\n\n          // fill background color for tide chart\n          _fillChartBg({\n            start: middlePt(i),\n            end: endPt(i),\n            chartHeight,\n            ctx,\n          });\n        }\n      }\n      ctx.stroke();\n    },\n    [pxEachHr]\n  );\n\n  const drawSun = useCallback(\n    (ctx, chartHeight) => {\n      //get position of sun base on the TimeChart\n      const ps = getQuadraticCurvePoint(\n        period * chartWidth + halfChartWidth,\n        chartHeight,\n        chartWidth * (period + 1),\n        -chartHeight + 150,\n        (period + 1) * chartWidth + halfChartWidth,\n        chartHeight,\n        tmpPos\n      );\n\n      if (period > 0) {\n        setPos((scrollNumb / chartWidth) % 2);\n      } else {\n        setPos(scrollNumb / chartWidth);\n      }\n\n      //draw sun icon\n      ctx.drawImage(sunRef.current, ps.x - 10, ps.y - 10, 20, 20);\n    },\n    [chartWidth, period, halfChartWidth, scrollNumb, sunRef, tmpPos]\n  );\n\n  const handleScroll = ({ target }) => {\n    const period = Math.floor(scrollNumb / chartWidth);\n    setScroll(target.scrollLeft);\n    setPeriod(period);\n    setDay(Math.floor(timeFromPx / 24));\n  };\n\n  const handleCanvas = useCallback(() => {\n    const chartHeight =\n      chartContainerRef.current && chartContainerRef.current.offsetHeight - 20;\n    const c = chartRef.current || {};\n    const ctx = chartRef.current && chartRef.current.getContext(\"2d\");\n\n    c.width = canvasWidth;\n    c.height = chartHeight;\n\n    if (ctx) {\n      drawTideChart(ctx, chartHeight);\n      drawTimeChart(ctx, chartHeight);\n      drawSun(ctx, chartHeight);\n    }\n  }, [\n    canvasWidth,\n    chartContainerRef,\n    chartRef,\n    drawSun,\n    drawTideChart,\n    drawTimeChart,\n  ]);\n\n  useEffect(() => {\n    handleCanvas();\n  }, [chartContainerRef, chartWidth, handleCanvas, scrollNumb]);\n\n  return (\n    <div\n      className=\"chart-container\"\n      ref={chartContainerRef}\n      onScroll={handleScroll}\n    >\n      <canvas className=\"chart-canvas\" ref={chartRef} />\n      <div className=\"chart-title\">\n        <span className=\"blue-title\">Tide</span>\n        <span className=\"orange-title\">Sunrise & Sunset</span>\n      </div>\n      <img ref={sunRef} src={sun} className=\"img-sun\" alt=\"sun\" />\n      {mode === \"moon\" && <div className=\"icon-moon\"></div>}\n      <span className=\"time-text\">{timeScroll}</span>\n      <div className=\"day-text\">Day {days + 1}</div>\n    </div>\n  );\n};\n\nexport default WeatherChart;\n","import { useState, useLayoutEffect } from \"react\";\n\nexport const useWindowResize = () => {\n  const { innerWidth } = window;\n  const [chartWidth, setChartWidth] = useState(innerWidth);\n  useLayoutEffect(() => {\n    const updateChartWidth = (e) => {\n      const resizedChartWidth = e && e.currentTarget.innerWidth;\n      if (resizedChartWidth) {\n        setChartWidth(resizedChartWidth);\n      }\n    };\n    updateChartWidth();\n    window.addEventListener(\"resize\", updateChartWidth);\n    return () => {\n      window.removeEventListener(\"resize\", updateChartWidth);\n    };\n  }, [chartWidth]);\n\n  return chartWidth;\n};\n","import Layout from \"./Layout\";\n\nexport default Layout;\n","import React from \"react\";\nimport Nav from \"../Nav\";\nimport WeatherStatus from \"../WeatherStatus\";\nimport WeatherParams from \"../WeatherParams\";\nimport WeatherChart from \"../WeatherChart\";\n\nconst Layout = () => {\n  return (\n    <div className=\"layout-container\">\n      <div className=\"layout-uppper\">\n        <Nav />\n        <WeatherStatus />\n        <WeatherParams />\n      </div>\n      <WeatherChart />\n    </div>\n  );\n};\n\nexport default Layout;\n","import React from \"react\";\nimport Layout from \"./components/Layout\";\nimport \"./styles/styles.scss\";\n\nfunction App() {\n  return <Layout />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}